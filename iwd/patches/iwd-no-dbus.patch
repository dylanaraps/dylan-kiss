diff --git a/src/agent.c b/src/agent.c
index 2c04c54..189c501 100644
--- a/src/agent.c
+++ b/src/agent.c
@@ -623,23 +623,6 @@ bool agent_init(struct l_dbus *dbus)
 {
 	agents = l_queue_new();
 
-	if (!l_dbus_register_interface(dbus, IWD_AGENT_MANAGER_INTERFACE,
-						setup_agent_interface,
-						NULL, false)) {
-		l_info("Unable to register %s interface",
-				IWD_AGENT_MANAGER_INTERFACE);
-		return false;
-	}
-
-	if (!l_dbus_object_add_interface(dbus, IWD_AGENT_MANAGER_PATH,
-						IWD_AGENT_MANAGER_INTERFACE,
-						NULL)) {
-		l_info("Unable to register the agent manager object on '%s'",
-				IWD_AGENT_MANAGER_PATH);
-		l_dbus_unregister_interface(dbus, IWD_AGENT_MANAGER_INTERFACE);
-		return false;
-	}
-
 	return true;
 }
 
diff --git a/src/device.c b/src/device.c
index 4f9d393..4260cde 100644
--- a/src/device.c
+++ b/src/device.c
@@ -413,15 +413,6 @@ struct device *device_create(struct wiphy *wiphy, struct netdev *netdev)
 	device->wiphy = wiphy;
 	device->netdev = netdev;
 
-	if (!l_dbus_object_add_interface(dbus, netdev_get_path(device->netdev),
-					IWD_DEVICE_INTERFACE, device))
-		l_info("Unable to register %s interface", IWD_DEVICE_INTERFACE);
-
-	if (!l_dbus_object_add_interface(dbus, netdev_get_path(device->netdev),
-					L_DBUS_INTERFACE_PROPERTIES, device))
-		l_info("Unable to register %s interface",
-				L_DBUS_INTERFACE_PROPERTIES);
-
 	scan_wdev_add(netdev_get_wdev_id(device->netdev));
 
 	/*
diff --git a/src/knownnetworks.c b/src/knownnetworks.c
index e153551..e3f05a6 100644
--- a/src/knownnetworks.c
+++ b/src/knownnetworks.c
@@ -74,17 +74,6 @@ const char *known_network_get_path(const struct network_info *network)
 
 static void known_network_register_dbus(struct network_info *network)
 {
-	const char *path = known_network_get_path(network);
-
-	if (!l_dbus_object_add_interface(dbus_get_bus(), path,
-					IWD_KNOWN_NETWORK_INTERFACE, network))
-		l_info("Unable to register %s interface",
-						IWD_KNOWN_NETWORK_INTERFACE);
-
-	if (!l_dbus_object_add_interface(dbus_get_bus(), path,
-					L_DBUS_INTERFACE_PROPERTIES, network))
-		l_info("Unable to register %s interface",
-						L_DBUS_INTERFACE_PROPERTIES);
 }
 
 static void known_network_set_autoconnect(struct network_info *network,
@@ -594,14 +583,6 @@ static int known_networks_init(void)
 	DIR *dir;
 	struct dirent *dirent;
 
-	if (!l_dbus_register_interface(dbus, IWD_KNOWN_NETWORK_INTERFACE,
-						setup_known_network_interface,
-						NULL, false)) {
-		l_info("Unable to register %s interface",
-				IWD_KNOWN_NETWORK_INTERFACE);
-		return -EPERM;
-	}
-
 	dir = opendir(DAEMON_STORAGEDIR);
 	if (!dir) {
 		l_info("Unable to open %s: %s", DAEMON_STORAGEDIR,
diff --git a/src/main.c b/src/main.c
index 35d14c6..b257020 100644
--- a/src/main.c
+++ b/src/main.c
@@ -500,19 +500,6 @@ int main(int argc, char *argv[])
 	if (getenv("IWD_GENL_DEBUG"))
 		l_genl_set_debug(genl, do_debug, "[GENL] ", NULL);
 
-	dbus = l_dbus_new_default(L_DBUS_SYSTEM_BUS);
-	if (!dbus) {
-		l_error("Failed to initialize D-Bus");
-		goto fail_dbus;
-	}
-
-	if (enable_dbus_debug)
-		l_dbus_set_debug(dbus, do_debug, "[DBUS] ", NULL);
-
-	l_dbus_set_ready_handler(dbus, dbus_ready, dbus, NULL);
-	l_dbus_set_disconnect_handler(dbus, dbus_disconnected, NULL, NULL);
-	dbus_init(dbus);
-
 	eap_init(eap_mtu);
 	eapol_init();
 	rfkill_init();
diff --git a/src/network.c b/src/network.c
index b8cc0b7..396a94f 100644
--- a/src/network.c
+++ b/src/network.c
@@ -1334,18 +1334,6 @@ static bool network_property_get_known_network(struct l_dbus *dbus,
 
 bool network_register(struct network *network, const char *path)
 {
-	if (!l_dbus_object_add_interface(dbus_get_bus(), path,
-					IWD_NETWORK_INTERFACE, network)) {
-		l_info("Unable to register %s interface",
-						IWD_NETWORK_INTERFACE);
-		return false;
-	}
-
-	if (!l_dbus_object_add_interface(dbus_get_bus(), path,
-					L_DBUS_INTERFACE_PROPERTIES, network))
-		l_info("Unable to register %s interface",
-						L_DBUS_INTERFACE_PROPERTIES);
-
 	network->object_path = l_strdup(path);
 
 	return true;
diff --git a/src/wiphy.c b/src/wiphy.c
index 2ff652f..db7dadc 100644
--- a/src/wiphy.c
+++ b/src/wiphy.c
@@ -1170,13 +1170,6 @@ bool wiphy_init(struct l_genl_family *in, const char *whitelist,
 
 	rfkill_watch_add(wiphy_rfkill_cb, NULL);
 
-	if (!l_dbus_register_interface(dbus_get_bus(),
-					IWD_WIPHY_INTERFACE,
-					setup_wiphy_interface,
-					NULL, false))
-		l_error("Unable to register the %s interface",
-				IWD_WIPHY_INTERFACE);
-
 	hwdb = l_hwdb_new_default();
 
 	if (whitelist)
